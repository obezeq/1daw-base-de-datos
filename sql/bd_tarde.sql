	-- Creando tabla de departamentos a nivel de columnas
	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;
	CREATE TABLE DEPARTAMENTOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(50) UNIQUE NOT NULL,
		PRESUPUESTO NUMERIC(12,2) CHECK (PRESUPUESTO > 0),
		FECHA_CREACION DATE DEFAULT CURRENT_DATE
	);

	-- Creando tabla de empleados a nivel de columnas
	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		ID SERIAL CONSTRAINT PK_EMPLEADOS PRIMARY KEY,
		NOMBRE VARCHAR(100) NOT NULL
	);


	-- Borra una tabla (si existe) y sus restricciones
	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;	
	-- Creando tabla de departamentos a nivel de tablas
	CREATE TABLE DEPARTAMENTOS (
		ID SERIAL,
		nombre VARCHAR(50) NOT NULL,
		CONSTRAINT PK_DEPARTAMENTOS PRIMARY KEY (ID)
	);


	-- Creamos tabla y a nivel de tabla ponemos nombre de restricion de una clave compuesta
	DROP TABLE IF EXISTS INSCRIPCIONES CASCADE;
	CREATE TABLE INSCRIPCIONES (
		ID_ESTUDIANTE INT,
		ID_CURSO INT,
		FECHA_INSCRIPCION DATE DEFAULT CURRENT_DATE,
		CONSTRAINT PK_INSCRIPCIONES PRIMARY KEY (ID_ESTUDIANTE, ID_CURSO)
	);

	-- Tabla para almacenar empleados, incluyendo una clave foránea que referencia a deepartamentos. Este diseño permite ver cómo los empleados están organizados
	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(100) NOT NULL,
		SALARIO NUMERIC(10, 2) CHECK (SALARIO > 0),
		FECHA_CONTRATACION DATE DEFAULT CURRENT_DATE,
		DEPARTAMENTO_ID INT REFERENCES DEPARTAMENTOS(ID) ON DELETE SET NULL,
		CORREO VARCHAR(100) UNIQUE CHECK (CORREO LIKE '%_@__%.__%'),
		CONSTRAINT SALARIO_MIN CHECK (SALARIO >= 1000)
	);

	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;
	CREATE TABLE DEPARTAMENTOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(50) NOT NULL
	);

	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(100) NOT NULL,
		ID_DEPARTAMENTO INT CONSTRAINT FK_EMPLEDOS_DEPARTAMENTOS REFERENCES DEPARTAMENTOS(ID)
	);

	-- CREAMOS TABLA DE CURSOS
	DROP TABLE IF EXISTS CURSOS CASCADE;
	CREATE TABLE CURSOS (
		ID SERIAL PRIMARY KEY,
		TITULO VARCHAR(100) NOT NULL
	);
	
	-- CREAMOS TABLA MODULOS CON SU CLAVE AJENA A NIVEL DE TABLA
	DROP TABLE IF EXISTS MODULOS CASCADE;
	CREATE TABLE MODULOS (
		ID SERIAL PRIMARY KEY,
		TITULO VARCHAR(100) NOT NULL,
		ID_CURSO INT,
		CONSTRAINT FK_MODULOS_CURSOS FOREIGN KEY (ID_CURSO) REFERENCES CURSOS(ID)
	);

	-- CREAMOS LA TABLA CURSOS_ESTUDIANTES QUE TIENE CLAVE PRIMARIA COMPUESTA
	DROP TABLE IF EXISTS CURSOS_ESTUDIANTES CASCADE;
	CREATE TABLE CURSOS_ESTUDIANTES (
		ID_ESTUDIANTE INT,
		ID_CURSO INT,
		PRIMARY KEY (ID_ESTUDIANTE, ID_CURSO)
	);

	-- CREAMOS LA TABLA CURSOS_ESTUDIANTES QUE TIENE CLAVE PRIMARIA COMPUESTA, PERO PONIENDOLE UN NOMBRE A LA RESTRICCION
	DROP TABLE IF EXISTS CURSOS_ESTUDIANTES CASCADE;
	CREATE TABLE CURSOS_ESTUDIANTES (
		id_estudiante INT,
		id_curso INT,
		CONSTRAINT PK_CURSOS_ESTUDIANTES PRIMARY KEY (id_estudiante, id_curso)
	);

	-- CREAMOS TABLA EVALUACIONOES QUE TIENE UNA CLAVE AJENA COMPUESTA, APUNTANDO A LA TABLA CURSOS_ESTUDIANTES
	DROP TABLE IF EXISTS EVALUACIONES;
	CREATE TABLE EVALUACIONES (
		id SERIAL PRIMARY KEY,
		id_estudiante INT,
		id_curso INT,
		nota DECIMAL(4,2) CHECK (nota >= 0 AND nota <= 10),
		CONSTRAINT fk_evaluaciones_cursos_estudiantes FOREIGN KEY (id_estudiante, id_curso) REFERENCES CURSOS_ESTUDIANTES(id_estudiante, id_curso)
	);

	-- CCREAMOS DE NUEVO LA TABLA DEPARTAMENTOS
	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;
	CREATE TABLE DEPARTAMENTOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(50) NOT NULL
	);

	-- Y AHORA LA TABLA EMPLEADOS CON CLAVE AJENA ADEPARTAMENTOS Y CON CONFIGURACION ON DELETE Y ON UPDATE
	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		id_departamento INT,
		CONSTRAINT fk_empleados_departamentos FOREIGN KEY (id_departamento) REFERENCES DEPARTAMENTOS(id) ON DELETE SET NULL ON UPDATE CASCADE
	);

	-- MODIFICAR TABLAS A POSTERIORI, PRIMERO LAS CREO
	DROP  TABLE IF EXISTS CATEGORIAS CASCADE;
	CREATE TABLE CATEGORIAS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(50) NOT NULL
	);

	-- CREAR LA TABLA SIN LA CLAVE FORÁNEA
	DROP TABLE IF EXISTS PRODUCTOS CASCADE;
	CREATE TABLE PRODUCTOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		id_categoria INT
	);

	-- AÑADIR LA CLAVE FORÁNEA POSTERIORMENTE
	ALTER TABLE PRODUCTOS ADD CONSTRAINT fk_productos_categorias FOREIGN KEY (id_categoria) REFERENCES CATEGORIAS(id);

	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;
	CREATE TABLE DEPARTAMENTOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(50) UNIQUE NOT NULL,
		presupuesto NUMERIC(12, 2) CHECK (presupuesto > 0),
		fecha_creacion DATE DEFAULT CURRENT_DATE
	);

	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		salario INT CHECK (salario > 0),
		fecha_contratacion DATE DEFAULT CURRENT_DATE,
		departamento_id INT REFERENCES DEPARTAMENTOS(id) ON DELETE SET NULL,
		correo VARCHAR(100) UNIQUE CHECK (correo LIKE '%_@__%%.__%'),
		CONSTRAINT salario_min CHECK (salario >= 1000)
	);

	DROP TABLE IF EXISTS PROYECTOS CASCADE;
	CREATE TABLE PROYECTOS (
		id SERIAL PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		fecha_inicio DATE NOT NULL,
		fecha_fin DATE CHECK (fecha_fin > fecha_inicio),
		departamento_id INT NOT NULL REFERENCES DEPARTAMENTOS(id) ON DELETE CASCADE,
		CONSTRAINT proyecto_unico UNIQUE (nombre, departamento_id)
	);

	--  DROP TABLE IF EXISTS ASIGNACIONES CASCADE;
	-- CREATE TABLE ASIGNACIONES ();
	