	-- Creando tabla de departamentos a nivel de columnas
	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;
	CREATE TABLE DEPARTAMENTOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(50) UNIQUE NOT NULL,
		PRESUPUESTO NUMERIC(12,2) CHECK (PRESUPUESTO > 0),
		FECHA_CREACION DATE DEFAULT CURRENT_DATE
	);

	-- Creando tabla de empleados a nivel de columnas
	DROP TABLE IF EXISTS EMPLEADOS CASCADE;
	CREATE TABLE EMPLEADOS (
		ID SERIAL CONSTRAINT PK_EMPLEADOS PRIMARY KEY,
		NOMBRE VARCHAR(100) NOT NULL
	);


	-- Borra una tabla (si existe) y sus restricciones
	DROP TABLE IF EXISTS DEPARTAMENTOS CASCADE;	
	-- Creando tabla de departamentos a nivel de tablas
	CREATE TABLE DEPARTAMENTOS (
		ID SERIAL,
		nombre VARCHAR(50) NOT NULL,
		CONSTRAINT PK_DEPARTAMENTOS PRIMARY KEY (ID)
	);


	-- Creamos tabla y a nivel de tabla ponemos nombre de restricion de una clave compuesta
	DROP TABLE IF EXISTS INSCRIPCIONES CASCADE;
	CREATE TABLE INSCRIPCIONES (
		ID_ESTUDIANTE INT,
		ID_CURSO INT,
		FECHA_INSCRIPCION DATE DEFAULT CURRENT_DATE,
		CONSTRAINT PK_INSCRIPCIONES PRIMARY KEY (ID_ESTUDIANTE, ID_CURSO)
	);

	-- Tabla para almacenar empleados, incluyendo una clave for치nea que referencia a deepartamentos. Este dise침o permite ver c칩mo los empleados est치n organizados
	DROP TABLE IF EXISTS EMPLEADOS;
	CREATE TABLE EMPLEADOS (
		ID SERIAL PRIMARY KEY,
		NOMBRE VARCHAR(100) NOT NULL,
		SALARIO NUMERIC(10, 2) CHECK (SALARIO > 0),
		FECHA_CONTRATACION DATE DEFAULT CURRENT_DATE,
		DEPARTAMENTO_ID INT REFERENCES DEPARTAMENTOS(ID) ON DELETE SET NULL,
		CORREO VARCHAR(100) UNIQUE CHECK (CORREO LIKE '%_@__%.__%'),
		CONSTRAINT SALARIO_MIN CHECK (SALARIO >= 1000)
	);